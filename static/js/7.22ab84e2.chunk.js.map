{"version":3,"sources":["components/login/Login.module.sass","components/login/login.js","components/login/login-container.js","components/login/index.js","redux/auth-selectors.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js"],"names":["module","exports","Login","setUserAuth","isCaptcha","captcha","login","useFormik","initialValues","email","password","rememberMe","onSubmit","values","setErrors","validate","errors","length","className","s","loginPage","loginForm","handleSubmit","formBasic","htmlFor","label","error","input","required","type","placeholder","id","name","onChange","handleChange","value","emailPrompt","captchaWrapper","src","alt","formCheckbox","forgetPassword","btnClassName","btnStyle","wrapClassName","wrapperStyle","text","compose","connect","state","isAuth","getIsAuth","getIsCaptcha","getCaptcha","HOC","redirectProfileWrapperComponent","bind","LoginContainer","getMyId","auth","createSelector","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,UAAY,yBAAyB,UAAY,yBAAyB,MAAQ,qBAAqB,MAAQ,qBAAqB,YAAc,2BAA2B,aAAe,4BAA4B,eAAiB,8BAA8B,SAAW,wBAAwB,aAAe,4BAA4B,MAAQ,uB,6GCmGrYC,EA9FD,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,QAC9BC,EAAQC,YAAU,CACpBC,cAAe,CACbC,MAAO,GACPC,SAAU,GACVL,QAAS,GACTM,YAAY,GAEdC,SAAU,SAACC,EAAD,GAA0B,IAAhBC,EAAe,EAAfA,UAClBX,EAAYU,EAAQC,IAEtBC,SAAU,YAAwB,IAAtBN,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SACXM,EAAS,GAUb,MARc,KAAVP,IACAO,EAAOP,MAAQ,qDAEF,KAAbC,EACAM,EAAON,SAAW,oDACXA,EAASO,OAAS,KACzBD,EAAON,SAAP,iDAA4D,KAEzDM,KAIf,OACI,qBAAKE,UAAWC,IAAEC,UAAlB,SACI,uBAAMF,UAAWC,IAAEE,UAAWT,SAAUN,EAAMgB,aAA9C,UACI,sBAAKJ,UAAWC,IAAEI,UAAlB,UACI,wBAAOC,QAAQ,OAAON,UAAWC,IAAEM,MAAnC,0BACKnB,EAAMU,OAAOP,OAAS,qBAAKS,UAAWC,IAAEO,MAAlB,SAA0BpB,EAAMU,OAAOP,WAElE,uBAAOS,UAAWC,IAAEQ,MAChBC,UAAQ,EACRC,KAAK,QACLC,YAAY,cACZC,GAAG,QACHC,KAAK,QACLC,SAAU3B,EAAM4B,aAChBC,MAAO7B,EAAMO,OAAOJ,QACxB,mBAAGS,UAAWC,IAAEiB,YAAhB,+DAIJ,sBAAKlB,UAAWC,IAAEI,UAAlB,UACI,wBAAOC,QAAQ,WAAWN,UAAWC,IAAEM,MAAvC,yBACKnB,EAAMU,OAAON,UAAW,qBAAKQ,UAAWC,IAAEO,MAAlB,SAA0BpB,EAAMU,OAAON,cAEpE,uBAAOQ,UAAWC,IAAEQ,MAChBC,UAAQ,EACRC,KAAK,WACLC,YAAY,iBACZC,GAAG,WACHC,KAAK,WACLC,SAAU3B,EAAM4B,aAChBC,MAAO7B,EAAMO,OAAOH,cAGxBN,EAAY,sBAAKc,UAAWC,IAAEI,UAAlB,UACR,wBAAOC,QAAQ,UAAUN,UAAWC,IAAEM,MAAtC,wBACKnB,EAAMU,OAAOX,SAAU,qBAAMa,UAAWC,IAAEO,MAAnB,SAA2BpB,EAAMU,OAAOX,aAEpE,qBAAKa,UAAWC,IAAEkB,eAAlB,SACI,qBAAKC,IAAKjC,EAASkC,IAAI,OAE3B,uBAAOrB,UAAWC,IAAEQ,MAChBC,UAAQ,EACRC,KAAK,OACLC,YAAY,wBACZC,GAAG,UACHC,KAAK,UACLC,SAAU3B,EAAM4B,aAChBC,MAAO7B,EAAMO,OAAOR,aACnB,GAEb,sBAAKa,UAAWC,IAAEqB,aAAlB,UACI,uBACAf,MAAM,eACNI,KAAK,WACLE,GAAG,aACHC,KAAK,aACLC,SAAU3B,EAAM4B,aAChBC,MAAO7B,EAAMO,OAAOF,aAAc,sBAAMO,UAAWC,IAAEsB,eAAnB,4BAEtC,cAAC,IAAD,CACIC,aAAcvB,IAAEwB,SAChBC,cAAezB,IAAE0B,aACjBC,KAAM,iB,wBCjFXC,cACXC,aAPoB,SAACC,GAAD,MAAY,CAChCC,OAAQC,YAAUF,GAClB7C,UAAWgD,YAAaH,GACxB5C,QAASgD,YAAWJ,MAIK,CAAC9C,kBAC1BmD,IAAIC,gCAAgCC,KAAKF,KAF9BP,CAGb7C,GCfauD,a,gCCDf,oJAEaC,EAAU,SAAC,GACpB,OADqC,EAAhBC,KAAO5B,IASnBoB,EAAYS,aALQ,SAACX,GAE9B,OADyBA,EAAlBU,KAAOT,UAKd,SAACA,GACD,OAAOA,KAGEE,EAAe,SAACH,GAEzB,OAD4BA,EAArBU,KAAOvD,WAILiD,EAAa,SAACJ,GAEvB,OAD0BA,EAAnBU,KAAOtD,U,kECpBlB,IAAIwD,EAAY,YAgFT,IAAIC,EAAuB,SAA8BC,EAAGC,GACjE,OAAOD,IAAMC,GAsBR,SAASC,EAAeC,EAAMC,GACnC,IAAIC,EAAoD,kBAA3BD,EAAsCA,EAAyB,CAC1FE,cAAeF,GAEbG,EAAwBF,EAAgBC,cACxCA,OAA0C,IAA1BC,EAAmCR,EAAuBQ,EAC1EC,EAAwBH,EAAgBI,QACxCA,OAAoC,IAA1BD,EAAmC,EAAIA,EACjDE,EAAsBL,EAAgBK,oBACtCC,EA7BC,SAAkCL,GACvC,OAAO,SAAoCM,EAAMC,GAC/C,GAAa,OAATD,GAA0B,OAATC,GAAiBD,EAAK1D,SAAW2D,EAAK3D,OACzD,OAAO,EAMT,IAFA,IAAIA,EAAS0D,EAAK1D,OAET4D,EAAI,EAAGA,EAAI5D,EAAQ4D,IAC1B,IAAKR,EAAcM,EAAKE,GAAID,EAAKC,IAC/B,OAAO,EAIX,OAAO,GAcQC,CAAyBT,GACtCU,EAAoB,IAAZP,EA/Gd,SAA8BQ,GAC5B,IAAIC,EACJ,MAAO,CACLC,IAAK,SAAaC,GAChB,OAAIF,GAASD,EAAOC,EAAME,IAAKA,GACtBF,EAAM9C,MAGR0B,GAETuB,IAAK,SAAaD,EAAKhD,GACrB8C,EAAQ,CACNE,IAAKA,EACLhD,MAAOA,IAGXkD,WAAY,WACV,OAAOJ,EAAQ,CAACA,GAAS,IAE3BK,MAAO,WACLL,OAAQM,IA2FgBC,CAAqBd,GAtFnD,SAAwBF,EAASQ,GAC/B,IAAIS,EAAU,GAEd,SAASP,EAAIC,GACX,IAAIO,EAAaD,EAAQE,WAAU,SAAUV,GAC3C,OAAOD,EAAOG,EAAKF,EAAME,QAG3B,GAAIO,GAAc,EAAG,CACnB,IAAIT,EAAQQ,EAAQC,GAOpB,OALIA,EAAa,IACfD,EAAQG,OAAOF,EAAY,GAC3BD,EAAQI,QAAQZ,IAGXA,EAAM9C,MAIf,OAAO0B,EAyBT,MAAO,CACLqB,IAAKA,EACLE,IAxBF,SAAaD,EAAKhD,GACZ+C,EAAIC,KAAStB,IAEf4B,EAAQI,QAAQ,CACdV,IAAKA,EACLhD,MAAOA,IAGLsD,EAAQxE,OAASuD,GACnBiB,EAAQK,QAgBZT,WAXF,WACE,OAAOI,GAWPH,MARF,WACEG,EAAU,KA4CmDM,CAAevB,EAASE,GAEvF,SAASsB,IACP,IAAI7D,EAAQ4C,EAAMG,IAAIe,WAEtB,GAAI9D,IAAU0B,EAAW,CAIvB,GAFA1B,EAAQ+B,EAAKgC,MAAM,KAAMD,WAErBxB,EAAqB,CACvB,IAAIgB,EAAUV,EAAMM,aAChBc,EAAgBV,EAAQW,MAAK,SAAUnB,GACzC,OAAOR,EAAoBQ,EAAM9C,MAAOA,MAG1C,GAAIgE,EACF,OAAOA,EAAchE,MAIzB4C,EAAMK,IAAIa,UAAW9D,GAGvB,OAAOA,EAOT,OAJA6D,EAASK,WAAa,WACpB,OAAOtB,EAAMO,SAGRU,EC9IT,SAASM,EAAgBC,GACvB,IAAIC,EAAeC,MAAMC,QAAQH,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKC,EAAaG,OAAM,SAAUC,GAChC,MAAsB,oBAARA,KACZ,CACF,IAAIC,EAAkBL,EAAaM,KAAI,SAAUF,GAC/C,MAAsB,oBAARA,EAAqB,aAAeA,EAAI5E,MAAQ,WAAa,YAAc4E,KACxFG,KAAK,MACR,MAAM,IAAIC,MAAM,kGAAoGH,EAAkB,KAGxI,OAAOL,EAGF,SAASS,EAAsBC,GACpC,IAAK,IAAIC,EAAOlB,UAAUhF,OAAQmG,EAAyB,IAAIX,MAAMU,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IACpHD,EAAuBC,EAAO,GAAKpB,UAAUoB,GAI/C,IAAIzD,EAAiB,WACnB,IAAK,IAAI0D,EAAQrB,UAAUhF,OAAQsF,EAAQ,IAAIE,MAAMa,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACrFhB,EAAMgB,GAAStB,UAAUsB,GAG3B,IAEIC,EAFAC,EAAkB,EAOlBC,EAAwB,CAC1BC,oBAAgBpC,GAGdqC,EAAarB,EAAMT,MAQvB,GAN0B,kBAAf8B,IACTF,EAAwBE,EAExBA,EAAarB,EAAMT,OAGK,oBAAf8B,EACT,MAAM,IAAIZ,MAAM,qFAAuFY,EAAa,KAKtH,IAAIC,EAAwBH,EACxBI,EAAyBD,EAAsBF,eAC/CA,OAA4C,IAA3BG,EAAoCV,EAAyBU,EAM9EC,EAAsBtB,MAAMC,QAAQiB,GAAkBA,EAAiB,CAACA,GACxEnB,EAAeF,EAAgBC,GAC/ByB,EAAqBd,EAAQhB,WAAM,EAAQ,CAAC,WAG9C,OAFAuB,IAEOG,EAAW1B,MAAM,KAAMD,aAC7BgC,OAAOF,IAENG,EAAWhB,GAAQ,WAIrB,IAHA,IAAIiB,EAAS,GACTlH,EAASuF,EAAavF,OAEjB4D,EAAI,EAAGA,EAAI5D,EAAQ4D,IAG1BsD,EAAOC,KAAK5B,EAAa3B,GAAGqB,MAAM,KAAMD,YAK1C,OADAuB,EAAcQ,EAAmB9B,MAAM,KAAMiC,MAiB/C,OAdAE,OAAOC,OAAOJ,EAAU,CACtBN,WAAYA,EACZI,mBAAoBA,EACpBxB,aAAcA,EACd+B,WAAY,WACV,OAAOf,GAETgB,eAAgB,WACd,OAAOf,GAETgB,oBAAqB,WACnB,OAAOhB,EAAkB,KAGtBS,GAIT,OAAOtE,EAEF,IAAIA,EAAgCqD,EAAsBhD","file":"static/js/7.22ab84e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"Login_loginPage__11x6n\",\"loginForm\":\"Login_loginForm__37Q6n\",\"formBasic\":\"Login_formBasic__3tg5v\",\"label\":\"Login_label__3aGYK\",\"input\":\"Login_input__rmEuq\",\"emailPrompt\":\"Login_emailPrompt__oyBY5\",\"formCheckbox\":\"Login_formCheckbox__1_cow\",\"forgetPassword\":\"Login_forgetPassword__2z13N\",\"btnStyle\":\"Login_btnStyle__3lEsg\",\"wrapperStyle\":\"Login_wrapperStyle__1ohXj\",\"error\":\"Login_error__1pVQI\"};","import React from 'react';\r\nimport ButtonSubmit from '../common/buttons/submit/button-submit';\r\nimport {useFormik} from 'formik';\r\n\r\nimport s from './Login.module.sass';\r\n\r\nconst Login = ({setUserAuth, isCaptcha, captcha}) => {\r\n    const login = useFormik({\r\n        initialValues: {\r\n          email: '',\r\n          password: '',\r\n          captcha: '',\r\n          rememberMe: false\r\n        },\r\n        onSubmit: (values, {setErrors}) => {\r\n          setUserAuth(values, setErrors);\r\n        },\r\n        validate: ({email, password}) => {\r\n            let errors = {};\r\n\r\n            if (email === '') {\r\n                errors.email = '* This field cannot be empty. Please, try better.';\r\n            }\r\n            if (password === '') {\r\n                errors.password = '* This field cannot be empty. Please, try better.';\r\n            } else if (password.length > 15) {\r\n                errors.password = `* It's too much symbols. Max length is ${15}`;\r\n            }\r\n            return errors;\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className={s.loginPage}>\r\n            <form className={s.loginForm} onSubmit={login.handleSubmit} >\r\n                <div className={s.formBasic}>\r\n                    <label htmlFor='name' className={s.label}>Email address\r\n                        {login.errors.email && <div className={s.error}>{login.errors.email}</div>}\r\n                    </label>\r\n                    <input className={s.input}\r\n                        required\r\n                        type='email'\r\n                        placeholder='Enter email'\r\n                        id='email'\r\n                        name='email'\r\n                        onChange={login.handleChange}\r\n                        value={login.values.email} />\r\n                    <p className={s.emailPrompt}>\r\n                        We'll never share your email with anyone else.\r\n                    </p>\r\n                </div>\r\n                <div className={s.formBasic}>\r\n                    <label htmlFor='password' className={s.label}>Password&nbsp;\r\n                        {login.errors.password&& <div className={s.error}>{login.errors.password}</div>}\r\n                    </label>\r\n                    <input className={s.input}\r\n                        required\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        id='password'\r\n                        name='password'\r\n                        onChange={login.handleChange}\r\n                        value={login.values.password} />\r\n                </div>\r\n                {\r\n                    isCaptcha ? <div className={s.formBasic}>\r\n                        <label htmlFor='captcha' className={s.label}>Captcha&nbsp;\r\n                            {login.errors.captcha&& <div  className={s.error}>{login.errors.captcha}</div>}\r\n                        </label>\r\n                        <div className={s.captchaWrapper}>\r\n                            <img src={captcha} alt='' />\r\n                        </div>\r\n                        <input className={s.input}\r\n                            required\r\n                            type='text'\r\n                            placeholder='Please, enter captcha'\r\n                            id='captcha'\r\n                            name='captcha'\r\n                            onChange={login.handleChange}\r\n                            value={login.values.captcha} />\r\n                    </div> : ''\r\n                }\r\n                <div className={s.formCheckbox}>\r\n                    <input\r\n                    label='Check me out'\r\n                    type='checkbox'\r\n                    id='rememberMe'\r\n                    name='rememberMe'\r\n                    onChange={login.handleChange}\r\n                    value={login.values.rememberMe} /><span className={s.forgetPassword}>Remember me</span>\r\n                </div>\r\n                <ButtonSubmit\r\n                    btnClassName={s.btnStyle}\r\n                    wrapClassName={s.wrapperStyle}\r\n                    text={'Submit'} />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport Login from './login';\r\nimport {setUserAuth} from '../../redux/auth-reducer';\r\nimport HOC from '../common/hoc';\r\nimport {getIsAuth, getIsCaptcha, getCaptcha} from '../../redux/auth-selectors';\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: getIsAuth(state),\r\n    isCaptcha: getIsCaptcha(state),\r\n    captcha: getCaptcha(state)\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setUserAuth}),\r\n    HOC.redirectProfileWrapperComponent.bind(HOC)\r\n)(Login);","import LoginContainer from './login-container';\r\nexport default LoginContainer;","import {createSelector} from 'reselect';\r\n\r\nexport const getMyId = ({auth: {id}}) => {\r\n    return id;\r\n}\r\n\r\nexport const getIsAuthSelector = (state) => {\r\n    const {auth: {isAuth}} = state;\r\n    return isAuth;\r\n}\r\n\r\nexport const getIsAuth = createSelector(getIsAuthSelector,\r\n    (isAuth) => {\r\n    return isAuth;\r\n});\r\n\r\nexport const getIsCaptcha = (state) => {\r\n    const {auth: {isCaptcha}} = state;\r\n    return isCaptcha;\r\n}\r\n\r\nexport const getCaptcha = (state) => {\r\n    const {auth: {captcha}} = state;\r\n    return captcha;\r\n}","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          return matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  // (memoize: MemoizeFunction, ...memoizeOptions: MemoizerOptions) {\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function () {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n};"],"sourceRoot":""}