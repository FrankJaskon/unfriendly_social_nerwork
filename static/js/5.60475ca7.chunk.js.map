{"version":3,"sources":["components/dialogs/messages/message/Message.module.sass","components/dialogs/messages/add-message/AddMessage.module.sass","components/dialogs/dialog-item/DialogItem.module.sass","components/dialogs/Dialogs.module.sass","components/dialogs/messages/message/index.js","components/dialogs/messages/message/message.js","components/dialogs/messages/add-message/add-message.js","components/dialogs/messages/add-message/index.js","components/dialogs/messages/index.js","components/dialogs/messages/messages.js","components/dialogs/dialog-item/index.js","components/dialogs/dialog-item/dialog-item.js","components/dialogs/dialogs.js","components/dialogs/dialogs-container.js","components/dialogs/index.js","components/common/validators.js"],"names":["module","exports","DialogMessage","props","id","name","message","className","s","user","user__img","user__name","message__text","validateTextField","validateTextFieldCreator","AddMessage","placeholder","addMessage","initialValues","newMessageBody","onSubmit","actions","resetForm","values","errors","touched","handleChange","handleSubmit","wrapper","input__wrapper","style","border","validate","input","type","onChange","value","error","component","text","DialogMessages","dialogs","messagesData","placeholderText","messages","map","m","DialogItem","to","activeClassName","active_link","Dialogs","dialogsList","dialogsData","d","dialogs__title","dialogs__wrapper","dialog__messages","path","render","compose","connect","isAuth","auth","HOC","redirectAuthWrapperComponent","bind","DialogsContainer","maxLength","length"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,UAAY,2BAA2B,WAAa,4BAA4B,cAAgB,iC,oBCAlLD,EAAOC,QAAU,CAAC,QAAU,4BAA4B,eAAiB,mCAAmC,MAAQ,0BAA0B,MAAQ,4B,oBCAtJD,EAAOC,QAAU,CAAC,eAAe,iCAAiC,WAAW,6BAA6B,YAAc,kC,oBCAxHD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,iBAAmB,kCAAkC,iBAAmB,kCAAkC,SAAW,0BAA0B,eAAiB,kC,0ECAtMC,ECGO,SAACC,GACnB,IAAOC,EAAqBD,EAArBC,GAAIC,EAAiBF,EAAjBE,KAAMC,EAAWH,EAAXG,QAEjB,OACI,sBAAcC,UAAWC,IAAEF,QAA3B,UACI,sBAAKC,UAAWC,IAAEC,KAAlB,UACI,qBAAKF,UAAWC,IAAEE,YAGlB,mBAAGH,UAAWC,IAAEG,WAAhB,SACKN,OAGT,qBAAKE,UAAWC,IAAEI,cAAlB,SACKN,MAVCF,I,2CCDZS,EAAoBC,YAAyB,ICNpCC,EDQI,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,WAC9B,OAAO,cAAC,IAAD,CACHC,cAAe,CAACC,eAAgB,IAChCC,SAAU,WAAmBC,GAAa,IAA9BF,EAA6B,EAA7BA,eACJF,EAAWE,GACXE,EAAQC,aAJb,SAOC,gBAAEC,EAAF,EAAEA,OACEC,EADJ,EACIA,OACAC,EAFJ,EAEIA,QACAC,EAHJ,EAGIA,aACAC,EAJJ,EAIIA,aAJJ,OAIsB,eAAC,IAAD,CAAMpB,UAAWC,IAAEoB,QAASR,SAAUO,EAAtC,UACd,sBAAKpB,UAAWC,IAAEqB,eACdC,MAAON,EAAOL,gBAAkBM,EAAQN,eAAiB,CAACY,OAAQ,qBAAuB,GAD7F,UAEI,cAAC,IAAD,CACIC,SAAUnB,EACVN,UAAWC,IAAEyB,MACbC,KAAK,WACLlB,YAAaA,EACbZ,GAAG,iBACHC,KAAK,iBACL8B,SAAUT,EACVU,MAAOb,EAAOJ,iBAClB,cAAC,IAAD,CAAcZ,UAAWC,IAAE6B,MAAOhC,KAAK,iBAAiBiC,UAAU,WAEtE,cAAC,IAAD,CAAcC,KAAM,gBElCzBC,ECKQ,SAAC,GAA4E,IAAD,IAA1EC,QAAUC,EAAgE,EAAhEA,aAAcC,EAAkD,EAAlDA,gBAAiBxB,EAAiC,EAAjCA,eAAiBF,EAAgB,EAAhBA,WAEzE2B,EAAWF,EAAaG,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAA0BzC,KAAMyC,EAAEzC,KAAMC,QAASwC,EAAExC,SAA/BwC,EAAE1C,OAE7D,OACI,qCACKwC,EACD,cAAC,EAAD,CAAY5B,YAAa2B,EACrBxB,eAAgBA,EAChBF,WAAYA,Q,0BCdb8B,ECII,SAAC5C,GAChB,IAAOC,EAAYD,EAAZC,GAAIC,EAAQF,EAARE,KACX,OACI,oBAAIE,UAAWC,IAAE,gBAAjB,SACI,cAAC,IAAD,CAASwC,GAAE,0BAAqB5C,GAAMG,UAAWC,IAAE,YAAayC,gBAAiBzC,IAAE0C,YAAnF,SACK7C,O,yBCuBF8C,EA1BC,SAAC,GAA2B,IAA1BV,EAAyB,EAAzBA,QAASxB,EAAgB,EAAhBA,WAIjBmC,EAFgBX,EAAfY,YAEyBR,KAAI,SAAAS,GAAC,OAAI,cAAC,EAAD,CAAuBjD,KAAMiD,EAAEjD,KAAMD,GAAIkD,EAAElD,IAA1BkD,EAAElD,OAE5D,OACI,sBAAKG,UAAWC,IAAEiC,QAAlB,UACI,oBAAIlC,UAAWC,IAAE+C,eAAjB,qBAGA,oBAAIhD,UAAWC,IAAEgD,iBAAjB,SACKJ,IAEL,qBAAK7C,UAAWC,IAAEiD,iBAAlB,SACI,qBAAKlD,UAAWC,IAAEoC,SAAlB,SACI,cAAC,IAAD,CACIc,KAAI,oBACJC,OAAQ,kBAAM,cAAC,EAAD,CACVlB,QAASA,EACTxB,WAAYA,e,gCCZzB2C,cACXC,aAToB,SAAC,GAA+B,IAAvBC,EAAsB,EAA7BC,KAAOD,OAC7B,MAAO,CACHrB,QAF+C,EAAbA,QAGlCqB,YAMqB,CAAC7C,iBAC1B+C,IAAIC,6BAA6BC,KAAKF,KAF3BJ,CAGbT,GCjBagB,a,gCCDR,SAASrD,EAAyBsD,GACrC,OAAO,SAAChC,GACJ,IAAIC,EAMJ,MALc,KAAVD,EACFC,EAAQ,kDACCD,EAAMiC,OAASD,IACtB/B,EAAK,+CAA2C+B,IAE7C/B,GARf","file":"static/js/5.60475ca7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3f5n-\",\"user\":\"Message_user__3pCMU\",\"user__img\":\"Message_user__img__2QpAu\",\"user__name\":\"Message_user__name__17HoM\",\"message__text\":\"Message_message__text__7tVUF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddMessage_wrapper__34hJF\",\"input__wrapper\":\"AddMessage_input__wrapper__1QRdJ\",\"input\":\"AddMessage_input__181DQ\",\"error\":\"AddMessage_error__1C_4r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs-item\":\"DialogItem_dialogs-item__12kAf\",\"nav-link\":\"DialogItem_nav-link__3BmfO\",\"active_link\":\"DialogItem_active_link__2Lxp3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3H5If\",\"dialogs__wrapper\":\"Dialogs_dialogs__wrapper__YbpfM\",\"dialog__messages\":\"Dialogs_dialog__messages__1CpoC\",\"messages\":\"Dialogs_messages__37oFf\",\"dialogs__title\":\"Dialogs_dialogs__title__1fHN7\"};","import DialogMessage from './message';\r\nexport default DialogMessage;","import React from 'react';\r\n\r\nimport s from './Message.module.sass';\r\n\r\nconst DialogMessage = (props) => {\r\n    const {id, name, message} = props;\r\n\r\n    return (\r\n        <div key={id} className={s.message}>\r\n            <div className={s.user}>\r\n                <div className={s.user__img}>\r\n\r\n                </div>\r\n                <p className={s.user__name}>\r\n                    {name}\r\n                </p>\r\n            </div>\r\n            <div className={s.message__text}>\r\n                {message}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogMessage;","import React from 'react';\r\nimport ButtonSubmit from '../../../common/buttons/submit';\r\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport {validateTextFieldCreator} from '../../../common/validators';\r\n\r\nimport s from './AddMessage.module.sass';\r\n\r\nconst validateTextField = validateTextFieldCreator(50);\r\n\r\nconst AddMessage = ({placeholder, addMessage}) => {\r\n    return <Formik\r\n        initialValues={{newMessageBody: ''}}\r\n        onSubmit={({newMessageBody}, actions) => {\r\n                addMessage(newMessageBody);\r\n                actions.resetForm();\r\n        }} >\r\n        {\r\n            ({values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleSubmit}) => <Form className={s.wrapper} onSubmit={handleSubmit} >\r\n                    <div className={s.input__wrapper}\r\n                        style={errors.newMessageBody && touched.newMessageBody ? {border: '2px solid #ff0000'} : {}} >\r\n                        <Field\r\n                            validate={validateTextField}\r\n                            className={s.input}\r\n                            type='textarea'\r\n                            placeholder={placeholder}\r\n                            id='newMessageBody'\r\n                            name='newMessageBody'\r\n                            onChange={handleChange}\r\n                            value={values.newMessageBody} />\r\n                        <ErrorMessage className={s.error} name='newMessageBody' component='div' />\r\n                    </div>\r\n                    <ButtonSubmit text={'Send'} />\r\n                </Form>\r\n        }\r\n    </Formik>\r\n}\r\n\r\nexport default AddMessage;","import AddMessage from './add-message';\r\nexport default AddMessage;","import DialogMessages from './messages';\r\nexport default DialogMessages;","import React from 'react';\r\nimport DialogMessage from './message';\r\nimport AddMessage from './add-message';\r\n\r\n// import s from './Messages.module.sass';\r\n\r\nconst DialogMessages = ({dialogs: {messagesData, placeholderText, newMessageBody}, addMessage}) => {\r\n\r\n    const messages = messagesData.map(m => <DialogMessage key={m.id} name={m.name} message={m.message}/>);\r\n\r\n    return (\r\n        <>\r\n            {messages}\r\n            <AddMessage placeholder={placeholderText}\r\n                newMessageBody={newMessageBody}\r\n                addMessage={addMessage} />\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default DialogMessages;","import DialogItem from './dialog-item';\r\nexport default DialogItem;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nimport s from './DialogItem.module.sass';\r\n\r\nconst DialogItem = (props) => {\r\n    const {id, name} = props;\r\n    return (\r\n        <li className={s['dialogs-item']}>\r\n            <NavLink to={`/dialogs/dialog/${id}`} className={s['nav-link']} activeClassName={s.active_link}>\r\n                {name}\r\n            </NavLink>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport DialogMessages from './messages';\r\nimport DialogItem from './dialog-item';\r\nimport {Route} from 'react-router-dom';\r\n\r\nimport s from './Dialogs.module.sass';\r\n\r\nconst Dialogs = ({dialogs, addMessage}) => {\r\n\r\n    const {dialogsData} = dialogs;\r\n\r\n    const dialogsList = dialogsData.map(d => <DialogItem key={d.id} name={d.name} id={d.id}/>);\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <h3 className={s.dialogs__title}>\r\n                    Dialogs\r\n            </h3>\r\n            <ul className={s.dialogs__wrapper}>\r\n                {dialogsList}\r\n            </ul>\r\n            <div className={s.dialog__messages}>\r\n                <div className={s.messages}>\r\n                    <Route\r\n                        path={`/dialogs/dialog/0`}\r\n                        render={() => <DialogMessages\r\n                            dialogs={dialogs}\r\n                            addMessage={addMessage} />} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs;","import Dialogs from './dialogs';\r\nimport {addMessage} from '../../redux/dialogs-reducer';\r\nimport {connect} from 'react-redux';\r\nimport HOC from '../common/hoc';\r\nimport {compose} from 'redux';\r\n\r\n\r\nconst mapStateToProps = ({auth: {isAuth}, dialogs}) => {\r\n    return {\r\n        dialogs,\r\n        isAuth\r\n    };\r\n\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {addMessage}),\r\n    HOC.redirectAuthWrapperComponent.bind(HOC)\r\n)(Dialogs);\r\n\r\n","import DialogsContainer from './dialogs-container';\r\nexport default DialogsContainer;","export function validateTextFieldCreator(maxLength) {\r\n    return (value) => {\r\n        let error;\r\n        if (value === '') {\r\n          error = 'This field cannot be empty. Please, try better.';\r\n        } else if (value.length > maxLength) {\r\n            error = `It's too much symbols. Max length is ${maxLength}`;\r\n        }\r\n        return error;\r\n    }\r\n}"],"sourceRoot":""}